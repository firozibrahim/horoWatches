<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/css/bootstrap.min.css"> -->
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/js/bootstrap.bundle.min.js"> -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <script href="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link rel="stylesheet" href="/user/css/home.css">
    <link rel="stylesheet" href="/user/css/unAuthorised.css">
    <link rel="stylesheet" href="/user/css/profile.css">

</head>

<body>

    <%-include("../partials/navbar.ejs")%>
        <div class="container-fluid rounded bg-white position-relative">
            <div class="row">
               <%-include("../partials/profile.ejs")%>
                <div class="col-md-9 offset">
                    <div class="m-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <h4 class="text-right">Profile</h4>
                            <button type="button" class="btn btn-primary profile-button px-4 rounded-0 mb-2"
                                data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-whatever="@getbootstrap">

                                change password</button>
                            <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
                                aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h1 class="modal-title fs-5" id="exampleModalLabel">Forget Password</h1>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="password-form">
                                                <div class="mb-3">
                                                    <label for="old-password" class="col-form-label">Old
                                                        Password:</label>
                                                    <input type="password" class="form-control" id="old-password">
                                                </div>
                                                <div class="mb-3">
                                                    <label for="new-password" class="col-form-label">New
                                                        Password:</label>
                                                    <input type="password" class="form-control" id="new-password">
                                                </div>
                                                <div class="mb-3">
                                                    <label for="confirm-password" class="col-form-label">Confirm
                                                        Password:</label>
                                                    <input type="password" class="form-control" id="confirm-password">
                                                </div>
                                                <div class="d-flex justify-content-between">

                                                    <div id="password-warning" style="color: red;"></div>
                                                    <!-- <p class="forgot" ><a href="/user/forget-pass" id="forgot"></a></p> -->
                                                </div>
                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary"
                                                data-bs-dismiss="modal">Close</button>
                                            <button type="button" class="btn btn-primary"
                                                onclick="validatePassword()">Change Password</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr class="mt-0">
                        <div class="row ">
                            <div class="col-6">
                                <h6>User name</h6>
                                <p class="text-muted">
                                    <%=userData.Username%>
                                </p>
                            </div>
                        </div>
                        <div class="row pt-1">

                            <div class="row col-6">
                                <h6>Email</h6>
                                <p class="text-muted">
                                    <%=userData.Email%>
                                </p>
                            </div>
                        </div>
                        <div class="col-6 mb-3">
                            <h6>Phone</h6>
                            <p class="text-muted">+91 9846719448</p>
                        </div>
                        <h5 class="">Default address</h5>

                        <hr class="mt-0">
                        <div class="row">
                            <% if (userData.Address && userData.Address.length> 0) { %>
                                <div class="col-sm-9">
                                    
                                    <h6 class="mb-2"><%=userData.Username%></h6>
                                </div>
                                <div class=" text-secondary">
                                    <%= userData.Address[0].addressLine %>
                                        <br>
                                        <%= userData.Address[0].city %> -
                                        <%= userData.Address[0].pinCode %>
                                        <br>
                                        
                                        
                                        <%= userData.Address[0].state %>
                                        <br>
                                                    
                                                    <%= userData.Address[0].MobileNumber %>
                                </div>
                                <% } else { %>

                                    <div class="col-sm-12 text-secondary">
                                        Address information is not available.
                                    </div>
                                    <% } %>

                        </div>
                    </div>
                    <div class="mt-5 text-center"><a href="/user/toManageAddress"><button
                                class="btn btn-primary profile-button rounded-0" type="button">
                                Manage addresses </button></a></div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Crop Image</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                     <img src="" alt="" id="cropImage" class="">
                        <div id="cropperContainer"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="btn-crop">Crop</button>
                    </div>
                </div>
            </div>
        </div>

        </div>
        </div>
        </div>
        </div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js" integrity="sha512-9KkIqdfN7ipEW6B6k+Aq20PV31bjODg4AA52W+tYtAE0jE0kMx49bjJ3FgvS56wzmyfMUHbQ4Km2b7l9+Y/+Eg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.css">
        <script>
            function validatePassword() {
                const oldPassword = document.getElementById('old-password').value;
                const newPassword = document.getElementById('new-password').value;
                const confirmPassword = document.getElementById('confirm-password').value;
                const passwordWarning = document.getElementById('password-warning');

                if (!oldPassword) {
                    passwordWarning.textContent = "Old Password is required.";
                } else if (!newPassword) {
                    passwordWarning.textContent = "New Password is required.";
                } else if (newPassword !== confirmPassword) {
                    passwordWarning.textContent = "New and Confirm passwords do not match.";
                } else if (newPassword.length < 8 || !/[0-9]/.test(newPassword) || !/[A-Z]/.test(newPassword) || !/[a-z]/.test(newPassword) || !/[$&+,:;=?@#|'<>.^*()%!-]/.test(newPassword)) {
                    passwordWarning.textContent = "Password should contain at least one uppercase letter, one lowercase letter, a special character (@#$%^&+=!), and a number. Password length should be between 8 and 20 characters.";
                } else {
                    // Create a data object to send to the backend
                    const data = {
                        oldPassword: oldPassword,
                        newPassword: newPassword,
                    };

                    // Make a POST request to the backend API
                    fetch('/user/change-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    })
                        .then((response) => {
                            if (response.success) {
                                // Password change was successful, handle the response accordingly
                                swal("Password changed successfully")
                                console.log('Password changed successfully');
                                var myModal = new bootstrap.Modal(document.getElementById('exampleModal'));
                                myModal.hide();



                            } else {
                                // Password change failed, display an error message
                                passwordWarning.textContent = "wrong password";
                                // document.getElementById("forgot").textContent = "forgot password?"
                            }
                        })
                        .catch((error) => {
                            console.error('Error:', error);
                        });
                }
            }
        </script>
        <script>
            let croppedImageDataUrl;
            function openCropper(event){
                const myModal =new bootstrap.Modal(document.getElementById('cropperModal'))
                const fileInput = event.target;
                const file = fileInput.files[0];
                
                if (file) {
                    const reader = new FileReader();
                    
                    reader.onload = function (e) {
                        const image = document.getElementById('cropImage')
                        image.src = e.target.result;
                        
                        image.onload = function () {
                            
                            
                            const cropper = new Cropper(image, {
                                autoCrop: false,
                                viewMode: 2 ,
                                aspectRatio: 1/1,
                                minContainerHeight: 500,
		                        minContainerWidth: 450,
		                        minCanvasHeight: 500,
		                        minCanvasWidth: 450,
                            });
                            myModal.show()
                            document.querySelector('#btn-crop').addEventListener('click',function(){
                                croppedImage = cropper.getCroppedCanvas()
                                uploadProfileImage(croppedImage)
                            })
            };
        };

                    reader.readAsDataURL(file);
                        
    }
            }
            function uploadProfileImage(croppedImage) {
                // const fileInput = croppedImageDataUrl;
                // console.log(croppedImage);
                const canvas = croppedImage
                canvas.toBlob(function (blob) {
            const formData = new FormData();
            formData.append('profileImage', blob, 'cropped_image.png');

            fetch('/user/uploadProfileImage', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (response.ok) {
                    console.log('File uploaded successfully.');
                    window.location.reload();
                } else {
                    console.error('File upload failed.');
                }
            })
            .catch(error => console.error('Error uploading file:', error));
        }, 'image/png');

                // if (croppedImage) {
                //     console.log("file input");
                //     const formData = new FormData();
                //     formData.append('profileImage', croppedImage);
        
                //     fetch('/user/uploadProfileImage', {
                //         method: 'POST',
                //         body: formData,
                //     })
                //     .then(response => {
                //         if (response.ok) {
                //             console.log('File uploaded successfully.');
                //             window.location.reload();
                //         } else {
                //             console.error('File upload failed.');
                //         }
                //     })
                //     .catch(error => console.error('Error uploading file:', error));
                // }
            }
        </script>
    <script src="/user/script/navbar.js"></script>


</body>

</html>